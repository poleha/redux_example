{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA;;;;AACA;;AAKA;;AACA;;AAKA;;;;AACA;;;;;;;;;;;;;AAEA,IAAM,QAAQ,+BAAR;;;AAEN,sBACE;;IAAU,OAAO,KAAP,EAAV;EACE;;MAAK,WAAU,KAAV,EAAL;IACA,kDADA;GADF;CADF,EAME,SAAS,cAAT,CAAwB,MAAxB,CANF","file":"index-compiled.js","sourcesContent":["import React from 'react' //Импортируем файл React.js из react\nimport { render } from 'react-dom' //Этот модуль делает\n// module.exports = require('react/lib/ReactDOM');\n//Мы из этого файла импортируем функцию\n\n\nimport { Provider } from 'react-redux'\nimport './styles/app.css'\n//В реальном приложении, имеет смысл стили для компонентов импортировать в коде самих компонентов,\n// что даст очень большие удобства для переиспользования целых блоков, включая оформление.\n\n\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\n\nconst store = configureStore();\n\nrender(\n  <Provider store={store}>\n    <div className='app'>\n    <App />\n    </div>\n  </Provider>,\n  document.getElementById('root')\n);\n\n//Выводим обычный react app, но обернутый в Provider\n//К провайдеру подключен корневой store,\n//Он может в любой момент вернуть состояние console.log(store.getState());\n//К store подключегн reducer, который обежиняет в себе два других reducer\n//Каждый reducer - это функция, которая получает state and action\n//state - это его состояние\n\n//const initialState = {\n//    year: 2016,\n//    photos: []\n//};\n\n//action - Объект, который содержит type, например \"SET_YEAR\" и payload, - это данные. например 2015.\n//action возвращает новый state\n\n\n//Клик по кнопке вызывает action creator, он выдает action и сразу dispatch его. Dispatch передается reducer и он меняет state(выдает новый)"]}